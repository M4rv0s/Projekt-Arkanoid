import pygame
import random

# Inicializace pygame
pygame.init()

# Konstanty
WIDTH, HEIGHT = 1000, 700
BALL_SPEED = {"easy": 4, "medium": 6, "hard": 8}
PADDLE_SPEED = 10
BLOCK_ROWS, BLOCK_COLS = 6, 10
BLOCK_WIDTH, BLOCK_HEIGHT = WIDTH // BLOCK_COLS, 40
LIVES = 3

# Barvy
WHITE = (255, 255, 255)
RED = (255, 0, 0)
BLUE = (0, 0, 255)
PADDLE_COLOR = (50, 50, 200)
SPECIAL_BLOCK_COLOR = (255, 215, 0)
UNBREAKABLE_BLOCK_COLOR = (128, 128, 128)
BACKGROUND_COLOR = (30, 30, 30)

# Nastavení okna
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Arkanoid")
font = pygame.font.Font(None, 36)


# Hlavní menu
def show_menu():
    screen.fill(BACKGROUND_COLOR)
    title = font.render("ARKANOID", True, WHITE)
    easy_text = font.render("1 - Snadná", True, WHITE)
    medium_text = font.render("2 - Střední", True, WHITE)
    hard_text = font.render("3 - Těžká", True, WHITE)
    screen.blit(title, (WIDTH // 2 - title.get_width() // 2, HEIGHT // 4))
    screen.blit(easy_text, (WIDTH // 2 - 50, HEIGHT // 2 - 30))
    screen.blit(medium_text, (WIDTH // 2 - 50, HEIGHT // 2))
    screen.blit(hard_text, (WIDTH // 2 - 50, HEIGHT // 2 + 30))
    pygame.display.update()

    while True:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                exit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_1:
                    return "easy"
                if event.key == pygame.K_2:
                    return "medium"
                if event.key == pygame.K_3:
                    return "hard"


# Funkce pro vytvoření bloků
def create_blocks():
    blocks = []
    for row in range(BLOCK_ROWS):
        for col in range(BLOCK_COLS):
            rect = pygame.Rect(col * BLOCK_WIDTH, row * BLOCK_HEIGHT, BLOCK_WIDTH, BLOCK_HEIGHT)
            rand_val = random.random()
            if rand_val < 0.2:
                color = UNBREAKABLE_BLOCK_COLOR
                block_type = "unbreakable"
            elif rand_val < 0.3:
                color = SPECIAL_BLOCK_COLOR
                block_type = "special"
            else:
                color = (random.randint(50, 255), random.randint(50, 255), random.randint(50, 255))
                block_type = "normal"
            blocks.append((rect, color, block_type))
    return blocks


# Restart hry
def reset_game():
    global ball, ball_dx, ball_dy, blocks, score, ball_speed, lives, level
    paddle.x = WIDTH // 2 - 75
    ball = pygame.Rect(WIDTH // 2 - 10, HEIGHT // 2, 20, 20)
    ball_dx, ball_dy = ball_speed, -ball_speed
    blocks = create_blocks()
    score = 0
    lives = LIVES
    level = 1


# Výběr obtížnosti
difficulty = show_menu()
ball_speed = BALL_SPEED[difficulty]

# Pálka
paddle = pygame.Rect(WIDTH // 2 - 75, HEIGHT - 30, 150, 15)
ball = pygame.Rect(WIDTH // 2 - 10, HEIGHT // 2, 20, 20)
ball_dx, ball_dy = ball_speed, -ball_speed
blocks = create_blocks()
score = 0
lives = LIVES
level = 1
paused = False


def toggle_pause():
    global paused
    paused = not paused
    while paused:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                exit()
            if event.type == pygame.KEYDOWN and event.key == pygame.K_p:
                paused = False


# Hlavní smyčka
running = True
clock = pygame.time.Clock()
while running:
    clock.tick(60)
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_p:
                toggle_pause()

    keys = pygame.key.get_pressed()
    if keys[pygame.K_LEFT] and paddle.left > 0:
        paddle.x -= PADDLE_SPEED
    if keys[pygame.K_RIGHT] and paddle.right < WIDTH:
        paddle.x += PADDLE_SPEED

    ball.x += ball_dx
    ball.y += ball_dy

    if ball.left <= 0 or ball.right >= WIDTH:
        ball_dx = -ball_dx
    if ball.top <= 0:
        ball_dy = -ball_dy

    if ball.colliderect(paddle):
        offset = (ball.centerx - paddle.centerx) / (paddle.width / 2)
        ball_dx = ball_speed * offset
        ball_dy = -ball_speed

    for block, color, block_type in blocks[:]:
        if ball.colliderect(block):
            if block_type != "unbreakable":
                blocks.remove((block, color, block_type))
                score += 50 if block_type == "special" else 10
                ball_dy = -ball_dy
                if block_type == "special":
                    ball_speed += 0.5
            else:
                if abs(ball.right - block.left) < 10 or abs(ball.left - block.right) < 10:
                    ball_dx = -ball_dx
                if abs(ball.bottom - block.top) < 10 or abs(ball.top - block.bottom) < 10:
                    ball_dy = -ball_dy
            break

    if ball.bottom >= HEIGHT:
        lives -= 1
        if lives == 0:
            pygame.time.delay(2000)
            reset_game()
        else:
            ball.x, ball.y = WIDTH // 2 - 10, HEIGHT // 2
            ball_dx, ball_dy = ball_speed, -ball_speed

    screen.fill(BACKGROUND_COLOR)
    pygame.draw.rect(screen, PADDLE_COLOR, paddle, border_radius=5)
    pygame.draw.ellipse(screen, RED, ball)
    for block, color, block_type in blocks:
        pygame.draw.rect(screen, color, block, border_radius=5)

    score_text = font.render(f"Skóre: {score}  Životy: {lives}  Úroveň: {level}", True, WHITE)
    screen.blit(score_text, (10, 10))
    pygame.display.update()

pygame.quit()
